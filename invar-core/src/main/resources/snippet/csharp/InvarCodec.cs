//===-----------------------------*  C#  *---------------------------------===//
//
//             THIS FILE IS GENERATED BY INVAR. DO NOT EDIT !!!
//
//===----------------------------------------------------------------------===//

namespace Invar
{

    public interface BinaryEncode
    {
        void Write(System.IO.BinaryWriter w);
    }

    public interface BinaryDecode
    {
        void Read(System.IO.BinaryReader r);
    }

    public interface JSONEncode
    {
        System.Text.StringBuilder ToStringJSON();
    }

    public interface XMLEncode
    {
        System.Text.StringBuilder ToStringXML();
    }

    public interface InvarProtoc
    {
        System.UInt16 GetProtocId();
        System.UInt32 GetProtocCRC();
    }

    public interface ProtocNotify : InvarProtoc
    {
    }

    public interface ProtocRequest : InvarProtoc
    {
    }

    public interface ProtocResponse : InvarProtoc
    {
        System.UInt16 GetProtocError();
    }

    static public final int ERR_NONE                 =   0;
    static public final int ERR_SIZE_TOO_LONG        = 493;
    static public final int ERR_INVALID_REQ          = 494;
    static public final int ERR_DECODE_EOF           = 495;
    static public final int ERR_DECODE_STRING_P      = 496;
    static public final int ERR_DECODE_STRUCT_P      = 497;
    static public final int ERR_DECODE_VEC_MAP_P     = 498;
    static public final int ERR_PROTOC_CRC_MISMATCH  = 499;
    static public final int ERR_PROTOC_UNHANDLED     = 500;
    static public final int ERR_PROTOC_INVALID_ID    = 501;
    static public final int ERR_PROTOC_NO_HANDLER    = 503;
    static public final int ERR_PROTOC_NO_SESSION    = 403;

}