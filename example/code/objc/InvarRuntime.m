//*==---------------------------*  Obj-C  *--------------------------------===//
//
//             THIS FILE IS GENERATED BY INVAR. DO NOT EDIT !!!
//
//===----------------------------------------------------------------------==*//
///*
#if ! __has_feature(objc_arc)
#error This file must be compiled with ARC. Either turn on ARC for the project or use -fobjc-arc flag
#endif //*/

#import "test_protoc_TestUserLoginR2C.h"
#import "test_protoc_TestUserLogin2S.h"
#import "test_protoc_TestUserLocationN2S.h"
#import "test_protoc_TestServerTimeN2C.h"
#import "test_protoc_TestHeartBeatR2S.h"
#import "test_protoc_TestHeartBeat2C.h"
#import "InvarRuntime.h"
#import "ProtocHandlers.h"

@implementation InvarRuntime

+ (instancetype) shared
{
    static id sharedInstance = nil;
    static dispatch_once_t predicate;
    dispatch_once(&predicate, ^{
        sharedInstance = [[self alloc] init];
    });
    return sharedInstance;
}

+ (NSInteger)HandleProtocAsServer:(DataReader *)r
{
    BOOL eof = NO;
    NSUInteger command = [r peekUInt16:&eof];
    if (eof) { return INVAR_ERR_DECODE_EOF; }
    NSInteger err = INVAR_ERR_NONE;
    switch (command) {
     case 65527: /* 客户端请求,服务端响应 */ {
        id req = [[TestUserLogin2S alloc] init];
        if (INVAR_ERR_NONE != (err = [req read:r])) { return err; }
        HandleTestUserLogin2S(req, [[TestUserLoginR2C alloc] init]);
        break; }
     case 65531: /* 客户端通知服务端 */ {
        id ntf = [[TestUserLocationN2S alloc] init];
        if (INVAR_ERR_NONE != (err = [ntf read:r])) { return err; }
        HandleTestUserLocationN2S(ntf);
        break; }
     case 65533: /* 服务端请求,客户端响应 */ {
        id rep = [[TestHeartBeatR2S alloc] init];
        if (INVAR_ERR_NONE != (err = [rep read:r])) { return err; }
        HandleTestHeartBeatR2S(rep);
        break; }
     default: { return INVAR_ERR_PROTOC_NO_HANDLER; }
    }
    return err;
}
/* HandleProtocAsServer */

+ (NSInteger)HandleProtocAsClient:(DataReader *)r
{
    BOOL eof = NO;
    NSUInteger command = [r peekUInt16:&eof];
    if (eof) { return INVAR_ERR_DECODE_EOF; }
    NSInteger err = INVAR_ERR_NONE;
    switch (command) {
     case 65528: /* 客户端请求,服务端响应 */ {
        id rep = [[TestUserLoginR2C alloc] init];
        if (INVAR_ERR_NONE != (err = [rep read:r])) { return err; }
        HandleTestUserLoginR2C(rep);
        break; }
     case 65530: /* 服务器通知客户端 */ {
        id ntf = [[TestServerTimeN2C alloc] init];
        if (INVAR_ERR_NONE != (err = [ntf read:r])) { return err; }
        HandleTestServerTimeN2C(ntf);
        break; }
     case 65534: /* 服务端请求,客户端响应 */ {
        id req = [[TestHeartBeat2C alloc] init];
        if (INVAR_ERR_NONE != (err = [req read:r])) { return err; }
        HandleTestHeartBeat2C(req, [[TestHeartBeatR2S alloc] init]);
        break; }
     default: { return INVAR_ERR_PROTOC_NO_HANDLER; }
    }
    return err;
}
/* HandleProtocAsClient */

@end

